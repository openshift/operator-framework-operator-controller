---
# Source: olmv1/templates/namespace.yml
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
    openshift.io/node-selector: ""
    workload.openshift.io/allowed: management
  labels:
    app.kubernetes.io/name: catalogd
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/warn-version: latest
    app.kubernetes.io/part-of: olm
    openshift.io/cluster-monitoring: "true"
  name: openshift-catalogd
---
# Source: olmv1/templates/networkpolicy/networkpolicy-olmv1-system-catalogd-controller-manager.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-controller-manager
  namespace: openshift-catalogd
spec:
  egress:
    - {}
  ingress:
    - ports:
        - port: 7443
          protocol: TCP
        - port: 8443
          protocol: TCP
        - port: 9443
          protocol: TCP
  podSelector:
    matchLabels:
      control-plane: catalogd-controller-manager
  policyTypes:
    - Ingress
    - Egress
---
# Source: olmv1/templates/networkpolicy/networkpolicy-olmv1-system-default-deny-all-traffic.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-default-deny-all-traffic
  namespace: openshift-catalogd
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
# Source: olmv1/templates/serviceaccount-olmv1-system-common-controller-manager.yml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-controller-manager
  namespace: openshift-catalogd
---
# Source: olmv1/templates/openshift/configmap-trusted-ca.yml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-trusted-ca-bundle
  namespace: openshift-catalogd
---
# Source: olmv1/templates/crds/customresourcedefinition-clustercatalogs.olm.operatorframework.io.yml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
    olm.operatorframework.io/generator: standard
  name: clustercatalogs.olm.operatorframework.io
spec:
  group: olm.operatorframework.io
  names:
    kind: ClusterCatalog
    listKind: ClusterCatalogList
    plural: clustercatalogs
    singular: clustercatalog
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.lastUnpacked
          name: LastUnpacked
          type: date
        - jsonPath: .status.conditions[?(@.type=="Serving")].status
          name: Serving
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            ClusterCatalog enables users to make File-Based Catalog (FBC) catalog data available to the cluster.
            For more information on FBC, see https://olm.operatorframework.io/docs/reference/file-based-catalogs/#docs
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                spec is the desired state of the ClusterCatalog.
                spec is required.
                The controller will work to ensure that the desired
                catalog is unpacked and served over the catalog content HTTP server.
              properties:
                availabilityMode:
                  default: Available
                  description: |-
                    availabilityMode allows users to define how the ClusterCatalog is made available to clients on the cluster.
                    availabilityMode is optional.

                    Allowed values are "Available" and "Unavailable" and omitted.

                    When omitted, the default value is "Available".

                    When set to "Available", the catalog contents will be unpacked and served over the catalog content HTTP server.
                    Setting the availabilityMode to "Available" tells clients that they should consider this ClusterCatalog
                    and its contents as usable.

                    When set to "Unavailable", the catalog contents will no longer be served over the catalog content HTTP server.
                    When set to this availabilityMode it should be interpreted the same as the ClusterCatalog not existing.
                    Setting the availabilityMode to "Unavailable" can be useful in scenarios where a user may not want
                    to delete the ClusterCatalog all together, but would still like it to be treated as if it doesn't exist.
                  enum:
                    - Unavailable
                    - Available
                  type: string
                priority:
                  default: 0
                  description: |-
                    priority allows the user to define a priority for a ClusterCatalog.
                    priority is optional.

                    A ClusterCatalog's priority is used by clients as a tie-breaker between ClusterCatalogs that meet the client's requirements.
                    A higher number means higher priority.

                    It is up to clients to decide how to handle scenarios where multiple ClusterCatalogs with the same priority meet their requirements.
                    When deciding how to break the tie in this scenario, it is recommended that clients prompt their users for additional input.

                    When omitted, the default priority is 0 because that is the zero value of integers.

                    Negative numbers can be used to specify a priority lower than the default.
                    Positive numbers can be used to specify a priority higher than the default.

                    The lowest possible value is -2147483648.
                    The highest possible value is 2147483647.
                  format: int32
                  type: integer
                source:
                  description: |-
                    source allows a user to define the source of a catalog.
                    A "catalog" contains information on content that can be installed on a cluster.
                    Providing a catalog source makes the contents of the catalog discoverable and usable by
                    other on-cluster components.
                    These on-cluster components may do a variety of things with this information, such as
                    presenting the content in a GUI dashboard or installing content from the catalog on the cluster.
                    The catalog source must contain catalog metadata in the File-Based Catalog (FBC) format.
                    For more information on FBC, see https://olm.operatorframework.io/docs/reference/file-based-catalogs/#docs.
                    source is a required field.

                    Below is a minimal example of a ClusterCatalogSpec that sources a catalog from an image:

                     source:
                       type: Image
                       image:
                         ref: quay.io/operatorhubio/catalog:latest
                  properties:
                    image:
                      description: |-
                        image is used to configure how catalog contents are sourced from an OCI image.
                        This field is required when type is Image, and forbidden otherwise.
                      properties:
                        pollIntervalMinutes:
                          description: |-
                            pollIntervalMinutes allows the user to set the interval, in minutes, at which the image source should be polled for new content.
                            pollIntervalMinutes is optional.
                            pollIntervalMinutes can not be specified when ref is a digest-based reference.

                            When omitted, the image will not be polled for new content.
                          minimum: 1
                          type: integer
                        ref:
                          description: |-
                            ref allows users to define the reference to a container image containing Catalog contents.
                            ref is required.
                            ref can not be more than 1000 characters.

                            A reference can be broken down into 3 parts - the domain, name, and identifier.

                            The domain is typically the registry where an image is located.
                            It must be alphanumeric characters (lowercase and uppercase) separated by the "." character.
                            Hyphenation is allowed, but the domain must start and end with alphanumeric characters.
                            Specifying a port to use is also allowed by adding the ":" character followed by numeric values.
                            The port must be the last value in the domain.
                            Some examples of valid domain values are "registry.mydomain.io", "quay.io", "my-registry.io:8080".

                            The name is typically the repository in the registry where an image is located.
                            It must contain lowercase alphanumeric characters separated only by the ".", "_", "__", "-" characters.
                            Multiple names can be concatenated with the "/" character.
                            The domain and name are combined using the "/" character.
                            Some examples of valid name values are "operatorhubio/catalog", "catalog", "my-catalog.prod".
                            An example of the domain and name parts of a reference being combined is "quay.io/operatorhubio/catalog".

                            The identifier is typically the tag or digest for an image reference and is present at the end of the reference.
                            It starts with a separator character used to distinguish the end of the name and beginning of the identifier.
                            For a digest-based reference, the "@" character is the separator.
                            For a tag-based reference, the ":" character is the separator.
                            An identifier is required in the reference.

                            Digest-based references must contain an algorithm reference immediately after the "@" separator.
                            The algorithm reference must be followed by the ":" character and an encoded string.
                            The algorithm must start with an uppercase or lowercase alpha character followed by alphanumeric characters and may contain the "-", "_", "+", and "." characters.
                            Some examples of valid algorithm values are "sha256", "sha256+b64u", "multihash+base58".
                            The encoded string following the algorithm must be hex digits (a-f, A-F, 0-9) and must be a minimum of 32 characters.

                            Tag-based references must begin with a word character (alphanumeric + "_") followed by word characters or ".", and "-" characters.
                            The tag must not be longer than 127 characters.

                            An example of a valid digest-based image reference is "quay.io/operatorhubio/catalog@sha256:200d4ddb2a73594b91358fe6397424e975205bfbe44614f5846033cad64b3f05"
                            An example of a valid tag-based image reference is "quay.io/operatorhubio/catalog:latest"
                          maxLength: 1000
                          type: string
                          x-kubernetes-validations:
                            - message: must start with a valid domain. valid domains must be alphanumeric characters (lowercase and uppercase) separated by the "." character.
                              rule: self.matches('^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])((\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+)?(:[0-9]+)?\\b')
                            - message: a valid name is required. valid names must contain lowercase alphanumeric characters separated only by the ".", "_", "__", "-" characters.
                              rule: self.find('(\\/[a-z0-9]+((([._]|__|[-]*)[a-z0-9]+)+)?((\\/[a-z0-9]+((([._]|__|[-]*)[a-z0-9]+)+)?)+)?)') != ""
                            - message: must end with a digest or a tag
                              rule: self.find('(@.*:)') != "" || self.find(':.*$') != ""
                            - message: tag is invalid. the tag must not be more than 127 characters
                              rule: 'self.find(''(@.*:)'') == "" ? (self.find('':.*$'') != "" ? self.find('':.*$'').substring(1).size() <= 127 : true) : true'
                            - message: tag is invalid. valid tags must begin with a word character (alphanumeric + "_") followed by word characters or ".", and "-" characters
                              rule: 'self.find(''(@.*:)'') == "" ? (self.find('':.*$'') != "" ? self.find('':.*$'').matches('':[\\w][\\w.-]*$'') : true) : true'
                            - message: digest algorithm is not valid. valid algorithms must start with an uppercase or lowercase alpha character followed by alphanumeric characters and may contain the "-", "_", "+", and "." characters.
                              rule: 'self.find(''(@.*:)'') != "" ? self.find(''(@.*:)'').matches(''(@[A-Za-z][A-Za-z0-9]*([-_+.][A-Za-z][A-Za-z0-9]*)*[:])'') : true'
                            - message: digest is not valid. the encoded string must be at least 32 characters
                              rule: 'self.find(''(@.*:)'') != "" ? self.find('':.*$'').substring(1).size() >= 32 : true'
                            - message: digest is not valid. the encoded string must only contain hex characters (A-F, a-f, 0-9)
                              rule: 'self.find(''(@.*:)'') != "" ? self.find('':.*$'').matches('':[0-9A-Fa-f]*$'') : true'
                      required:
                        - ref
                      type: object
                      x-kubernetes-validations:
                        - message: cannot specify pollIntervalMinutes while using digest-based image
                          rule: 'self.ref.find(''(@.*:)'') != "" ? !has(self.pollIntervalMinutes) : true'
                    type:
                      description: |-
                        type is a reference to the type of source the catalog is sourced from.
                        type is required.

                        The only allowed value is "Image".

                        When set to "Image", the ClusterCatalog content will be sourced from an OCI image.
                        When using an image source, the image field must be set and must be the only field defined for this type.
                      enum:
                        - Image
                      type: string
                  required:
                    - type
                  type: object
                  x-kubernetes-validations:
                    - message: image is required when source type is Image, and forbidden otherwise
                      rule: 'has(self.type) && self.type == ''Image'' ? has(self.image) : !has(self.image)'
              required:
                - source
              type: object
            status:
              description: |-
                status contains information about the state of the ClusterCatalog such as:
                  - Whether or not the catalog contents are being served via the catalog content HTTP server
                  - Whether or not the ClusterCatalog is progressing to a new state
                  - A reference to the source from which the catalog contents were retrieved
              properties:
                conditions:
                  description: |-
                    conditions is a representation of the current state for this ClusterCatalog.

                    The current condition types are Serving and Progressing.

                    The Serving condition is used to represent whether or not the contents of the catalog is being served via the HTTP(S) web server.
                    When it has a status of True and a reason of Available, the contents of the catalog are being served.
                    When it has a status of False and a reason of Unavailable, the contents of the catalog are not being served because the contents are not yet available.
                    When it has a status of False and a reason of UserSpecifiedUnavailable, the contents of the catalog are not being served because the catalog has been intentionally marked as unavailable.

                    The Progressing condition is used to represent whether or not the ClusterCatalog is progressing or is ready to progress towards a new state.
                    When it has a status of True and a reason of Retrying, there was an error in the progression of the ClusterCatalog that may be resolved on subsequent reconciliation attempts.
                    When it has a status of True and a reason of Succeeded, the ClusterCatalog has successfully progressed to a new state and is ready to continue progressing.
                    When it has a status of False and a reason of Blocked, there was an error in the progression of the ClusterCatalog that requires manual intervention for recovery.

                    In the case that the Serving condition is True with reason Available and Progressing is True with reason Retrying, the previously fetched
                    catalog contents are still being served via the HTTP(S) web server while we are progressing towards serving a new version of the catalog
                    contents. This could occur when we've initially fetched the latest contents from the source for this catalog and when polling for changes
                    to the contents we identify that there are updates to the contents.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastUnpacked:
                  description: |-
                    lastUnpacked represents the last time the contents of the
                    catalog were extracted from their source format. As an example,
                    when using an Image source, the OCI image will be pulled and the
                    image layers written to a file-system backed cache. We refer to the
                    act of this extraction from the source format as "unpacking".
                  format: date-time
                  type: string
                resolvedSource:
                  description: resolvedSource contains information about the resolved source based on the source type.
                  properties:
                    image:
                      description: |-
                        image is a field containing resolution information for a catalog sourced from an image.
                        This field must be set when type is Image, and forbidden otherwise.
                      properties:
                        ref:
                          description: |-
                            ref contains the resolved image digest-based reference.
                            The digest format is used so users can use other tooling to fetch the exact
                            OCI manifests that were used to extract the catalog contents.
                          maxLength: 1000
                          type: string
                          x-kubernetes-validations:
                            - message: must start with a valid domain. valid domains must be alphanumeric characters (lowercase and uppercase) separated by the "." character.
                              rule: self.matches('^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])((\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+)?(:[0-9]+)?\\b')
                            - message: a valid name is required. valid names must contain lowercase alphanumeric characters separated only by the ".", "_", "__", "-" characters.
                              rule: self.find('(\\/[a-z0-9]+((([._]|__|[-]*)[a-z0-9]+)+)?((\\/[a-z0-9]+((([._]|__|[-]*)[a-z0-9]+)+)?)+)?)') != ""
                            - message: must end with a digest
                              rule: self.find('(@.*:)') != ""
                            - message: digest algorithm is not valid. valid algorithms must start with an uppercase or lowercase alpha character followed by alphanumeric characters and may contain the "-", "_", "+", and "." characters.
                              rule: 'self.find(''(@.*:)'') != "" ? self.find(''(@.*:)'').matches(''(@[A-Za-z][A-Za-z0-9]*([-_+.][A-Za-z][A-Za-z0-9]*)*[:])'') : true'
                            - message: digest is not valid. the encoded string must be at least 32 characters
                              rule: 'self.find(''(@.*:)'') != "" ? self.find('':.*$'').substring(1).size() >= 32 : true'
                            - message: digest is not valid. the encoded string must only contain hex characters (A-F, a-f, 0-9)
                              rule: 'self.find(''(@.*:)'') != "" ? self.find('':.*$'').matches('':[0-9A-Fa-f]*$'') : true'
                      required:
                        - ref
                      type: object
                    type:
                      description: |-
                        type is a reference to the type of source the catalog is sourced from.
                        type is required.

                        The only allowed value is "Image".

                        When set to "Image", information about the resolved image source will be set in the 'image' field.
                      enum:
                        - Image
                      type: string
                  required:
                    - image
                    - type
                  type: object
                  x-kubernetes-validations:
                    - message: image is required when source type is Image, and forbidden otherwise
                      rule: 'has(self.type) && self.type == ''Image'' ? has(self.image) : !has(self.image)'
                urls:
                  description: urls contains the URLs that can be used to access the catalog.
                  properties:
                    base:
                      description: |-
                        base is a cluster-internal URL that provides endpoints for
                        accessing the content of the catalog.

                        It is expected that clients append the path for the endpoint they wish
                        to access.

                        Currently, only a single endpoint is served and is accessible at the path
                        /api/v1.

                        The endpoints served for the v1 API are:
                          - /all - this endpoint returns the entirety of the catalog contents in the FBC format

                        As the needs of users and clients of the evolve, new endpoints may be added.
                      maxLength: 525
                      type: string
                      x-kubernetes-validations:
                        - message: must be a valid URL
                          rule: isURL(self)
                        - message: scheme must be either http or https
                          rule: 'isURL(self) ? (url(self).getScheme() == "http" || url(self).getScheme() == "https") : true'
                  required:
                    - base
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: olmv1/templates/rbac/clusterrole-catalogd-manager-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: catalogd-manager-role
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  annotations:
    olm.operatorframework.io/feature-set: standard
rules:
  - apiGroups:
      - olm.operatorframework.io
    resources:
      - clustercatalogs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - olm.operatorframework.io
    resources:
      - clustercatalogs/finalizers
    verbs:
      - update
  - apiGroups:
      - olm.operatorframework.io
    resources:
      - clustercatalogs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    resourceNames:
      - privileged
    verbs:
      - use
---
# Source: olmv1/templates/rbac/clusterrole-common-metrics-reader.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: olmv1/templates/rbac/clusterrole-common-proxy-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: olmv1/templates/rbac/clusterrolebinding-catalogd-manager-rolebinding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: catalogd-manager-role
subjects:
  - kind: ServiceAccount
    name: catalogd-controller-manager
    namespace: openshift-catalogd
---
# Source: olmv1/templates/rbac/clusterrolebinding-common-proxy-rolebinding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: catalogd-proxy-role
subjects:
  - kind: ServiceAccount
    name: catalogd-controller-manager
    namespace: openshift-catalogd
---
# Source: olmv1/templates/openshift/role-openshift-config-manager-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-manager-role
  namespace: openshift-config
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
# Source: olmv1/templates/rbac/role-olmv1-system-catalogd-manager-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: catalogd-manager-role
  namespace: openshift-catalogd
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  annotations:
    olm.operatorframework.io/feature-set: standard
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - serviceaccounts
    verbs:
      - get
      - list
      - watch
---
# Source: olmv1/templates/rbac/role-olmv1-system-common-leader-election-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-leader-election-role
  namespace: openshift-catalogd
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: olmv1/templates/rbac/role-olmv1-system-metrics-monitor-role.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-metrics-monitor-role
  namespace: openshift-catalogd
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: olmv1/templates/openshift/rolebinding-openshift-config-manager-rolebinding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-manager-rolebinding
  namespace: openshift-config
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: catalogd-manager-role
subjects:
  - kind: ServiceAccount
    name: catalogd-controller-manager
    namespace: openshift-catalogd
---
# Source: olmv1/templates/rbac/rolebinding-olmv1-system-common-leader-election-rolebinding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-leader-election-rolebinding
  namespace: openshift-catalogd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: catalogd-leader-election-role
subjects:
  - kind: ServiceAccount
    name: catalogd-controller-manager
    namespace: openshift-catalogd
---
# Source: olmv1/templates/rbac/rolebinding-olmv1-system-common-manager-rolebinding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-manager-rolebinding
  namespace: openshift-catalogd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: catalogd-manager-role
subjects:
  - kind: ServiceAccount
    name: catalogd-controller-manager
    namespace: openshift-catalogd
---
# Source: olmv1/templates/rbac/rolebinding-olmv1-system-metrics-monitor-rolebinding.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-metrics-monitor-rolebinding
  namespace: openshift-catalogd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: catalogd-metrics-monitor-role
subjects:
  - kind: ServiceAccount
    name: prometheus-k8s
    namespace: openshift-monitoring
---
# Source: olmv1/templates/service-olmv1-system-catalogd-service.yml
apiVersion: v1
kind: Service
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
    service.beta.openshift.io/serving-cert-secret-name: catalogserver-cert
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-service
  namespace: openshift-catalogd
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: webhook
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: metrics
      port: 7443
      protocol: TCP
      targetPort: 7443
  selector:
    app.kubernetes.io/name: catalogd
---
# Source: olmv1/templates/deployment-olmv1-system-catalogd-controller-manager.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/default-logs-container: manager
    olm.operatorframework.io/feature-set: standard
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-controller-manager
  namespace: openshift-catalogd
spec:
  minReadySeconds: 5
  replicas: 1
  selector:
    matchLabels:
      control-plane: catalogd-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        olm.operatorframework.io/feature-set: standard
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        openshift.io/required-scc: privileged
      labels:
        app.kubernetes.io/name: catalogd
        control-plane: catalogd-controller-manager
        app.kubernetes.io/part-of: olm
    spec:
      containers:
        - args:
            - --leader-elect
            - --metrics-bind-address=:7443
            - --external-address=catalogd-service.openshift-catalogd.svc
            - --tls-cert=/var/certs/tls.crt
            - --tls-key=/var/certs/tls.key
            - --v=${LOG_VERBOSITY}
            - --global-pull-secret=openshift-config/pull-secret
          command:
            - ./catalogd
          env:
            - name: SSL_CERT_DIR
              value: /var/ca-certs
          image: "${CATALOGD_IMAGE}"
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /var/cache/
              name: cache
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/certs
              name: catalogserver-certs
            - mountPath: /var/ca-certs
              name: ca-certs
              readOnly: true
            - mountPath: /etc/containers
              name: etc-containers
              readOnly: true
            - mountPath: /etc/docker
              name: etc-docker
              readOnly: true
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: catalogd-controller-manager
      volumes:
        - emptyDir: {}
          name: cache
        - emptyDir: {}
          name: tmp
        - name: catalogserver-certs
          secret:
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
            optional: false
            secretName: catalogserver-cert
        - name: ca-certs
          projected:
            sources:
              - configMap:
                  items:
                    - key: ca-bundle.crt
                      path: ca-bundle.crt
                  name: catalogd-trusted-ca-bundle
                  optional: false
              - configMap:
                  items:
                    - key: service-ca.crt
                      path: service-ca.crt
                  name: openshift-service-ca.crt
                  optional: false
        - hostPath:
            path: /etc/containers
            type: Directory
          name: etc-containers
        - hostPath:
            path: /etc/docker
            type: Directory
          name: etc-docker
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        seLinuxOptions:
          type: spc_t
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
---
# Source: olmv1/templates/openshift-catalogs/clustercatalog-openshift-certified-operators.yml
apiVersion: olm.operatorframework.io/v1
kind: ClusterCatalog
metadata:
  name: openshift-certified-operators
spec:
  priority: -200
  source:
    type: Image
    image:
      pollIntervalMinutes: 10
      ref: registry.redhat.io/redhat/certified-operator-index:v4.20
---
# Source: olmv1/templates/openshift-catalogs/clustercatalog-openshift-community-operators.yml
apiVersion: olm.operatorframework.io/v1
kind: ClusterCatalog
metadata:
  name: openshift-community-operators
spec:
  priority: -400
  source:
    type: Image
    image:
      pollIntervalMinutes: 10
      ref: registry.redhat.io/redhat/community-operator-index:v4.20
---
# Source: olmv1/templates/openshift-catalogs/clustercatalog-openshift-redhat-marketplace.yml
apiVersion: olm.operatorframework.io/v1
kind: ClusterCatalog
metadata:
  name: openshift-redhat-marketplace
spec:
  priority: -300
  source:
    type: Image
    image:
      pollIntervalMinutes: 10
      ref: registry.redhat.io/redhat/redhat-marketplace-index:v4.20
---
# Source: olmv1/templates/openshift-catalogs/clustercatalog-openshift-redhat-operators.yml
apiVersion: olm.operatorframework.io/v1
kind: ClusterCatalog
metadata:
  name: openshift-redhat-operators
spec:
  priority: -100
  source:
    type: Image
    image:
      pollIntervalMinutes: 10
      ref: registry.redhat.io/redhat/redhat-operator-index:v4.20
---
# Source: olmv1/templates/mutatingwebhookconfiguration-catalogd-mutating-webhook-configuration.yml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: catalogd-mutating-webhook-configuration
  labels:
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
    olm.operatorframework.io/feature-set: standard
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: catalogd-service
        namespace: openshift-catalogd
        path: /mutate-olm-operatorframework-io-v1-clustercatalog
        port: 9443
    failurePolicy: Fail
    name: inject-metadata-name.olm.operatorframework.io
    rules:
      - apiGroups:
          - olm.operatorframework.io
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clustercatalogs
    sideEffects: None
    timeoutSeconds: 10
    matchConditions:
      - name: MissingOrIncorrectMetadataNameLabel
        expression: "'name' in object.metadata && (!has(object.metadata.labels) || !('olm.operatorframework.io/metadata.name' in object.metadata.labels) || object.metadata.labels['olm.operatorframework.io/metadata.name'] != object.metadata.name)"
---
# Source: olmv1/templates/servicemonitor-olmv1-system-metrics-monitor.yml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    olm.operatorframework.io/feature-set: standard
  labels:
    openshift.io/cluster-monitoring: 'true'
    app.kubernetes.io/name: catalogd
    app.kubernetes.io/part-of: olm
  name: catalogd-metrics-monitor
  namespace: openshift-catalogd
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      interval: 30s
      path: /metrics
      port: metrics
      scheme: https
      tlsConfig:
        caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
        certFile: /etc/prometheus/secrets/metrics-client-certs/tls.crt
        keyFile: /etc/prometheus/secrets/metrics-client-certs/tls.key
        serverName: catalogd-service.openshift-catalogd.svc
  namespaceSelector:
    matchNames:
      - openshift-catalogd
  selector:
    matchLabels:
      app.kubernetes.io/name: catalogd
